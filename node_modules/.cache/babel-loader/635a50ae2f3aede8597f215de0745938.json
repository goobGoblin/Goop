{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erbis\\\\Documents\\\\School\\\\447\\\\GoopProject\\\\goop_final_project\\\\src\\\\components\\\\universal\\\\NavigationBar\\\\NavigationBar.js\";\n// src/components/NavigationBar/NavigationBar.jsx\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavigationBar.css'; // Import the CSS file for styling\n\nconst menuItems = [{\n  id: 'genres',\n  label: 'Genres',\n  to: '/genres'\n}, {\n  id: 'artists',\n  label: 'Artists'\n}, {\n  id: 'albums',\n  label: 'Albums'\n}, {\n  id: 'mixes',\n  label: 'Mixes'\n}, {\n  id: 'labels',\n  label: 'Labels'\n}, {\n  id: 'account',\n  label: 'Account'\n}];\nfunction NavigationBar() {\n  const [selected, setSelected] = useState('genres');\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navigation-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, menuItems.map(item => item.to ?\n  /*#__PURE__*/\n  // Use Link for items with a 'to' property\n  React.createElement(Link, {\n    to: item.to,\n    key: item.id,\n    className: `nav-item ${selected === item.id ? 'selected' : ''}`,\n    onClick: () => setSelected(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, item.label) :\n  /*#__PURE__*/\n  // Fallback for items without a 'to' property\n  React.createElement(\"div\", {\n    key: item.id,\n    className: `nav-item ${selected === item.id ? 'selected' : ''} ${item.label === 'Account' ? 'nav-item-account' : ''}`,\n    onClick: () => setSelected(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, item.label)));\n}\nexport default NavigationBar;","map":{"version":3,"names":["React","useState","Link","menuItems","id","label","to","NavigationBar","selected","setSelected","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","item","key","onClick"],"sources":["C:/Users/erbis/Documents/School/447/GoopProject/goop_final_project/src/components/universal/NavigationBar/NavigationBar.js"],"sourcesContent":["// src/components/NavigationBar/NavigationBar.jsx\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavigationBar.css'; // Import the CSS file for styling\r\n\r\nconst menuItems = [\r\n  { id: 'genres', label: 'Genres', to: '/genres' },\r\n  { id: 'artists', label: 'Artists' },\r\n  { id: 'albums', label: 'Albums' },\r\n  { id: 'mixes', label: 'Mixes' },\r\n  { id: 'labels', label: 'Labels' },\r\n  { id: 'account', label: 'Account'},\r\n];\r\n\r\nfunction NavigationBar() {\r\n  const [selected, setSelected] = useState('genres');\r\n\r\n  return (\r\n    <nav className=\"navigation-bar\">\r\n          {menuItems.map((item) => (\r\n            item.to ? (\r\n              // Use Link for items with a 'to' property\r\n              <Link\r\n                to={item.to}\r\n                key={item.id}\r\n                className={`nav-item ${selected === item.id ? 'selected' : ''}`}\r\n                onClick={() => setSelected(item.id)}\r\n              >\r\n                {item.label}\r\n              </Link>\r\n            ) : (\r\n              // Fallback for items without a 'to' property\r\n              <div\r\n                key={item.id}\r\n                className={`nav-item ${selected === item.id ? 'selected' : ''} ${item.label === 'Account' ? 'nav-item-account' : ''}`}\r\n                onClick={() => setSelected(item.id)}\r\n              >\r\n                {item.label}\r\n              </div>\r\n            )\r\n          ))}\r\n        </nav>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,qBAAqB,CAAC,CAAC;;AAE9B,MAAMC,SAAS,GAAG,CAChB;EAAEC,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,QAAQ;EAAEC,EAAE,EAAE;AAAU,CAAC,EAChD;EAAEF,EAAE,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EACnC;EAAED,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EACjC;EAAED,EAAE,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAC/B;EAAED,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EACjC;EAAED,EAAE,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAS,CAAC,CACnC;AAED,SAASE,aAAaA,CAAA,EAAG;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,QAAQ,CAAC;EAElD,oBACED,KAAA,CAAAU,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxBd,SAAS,CAACe,GAAG,CAAEC,IAAI,IAClBA,IAAI,CAACb,EAAE;EAAA;EACL;EACAN,KAAA,CAAAU,aAAA,CAACR,IAAI;IACHI,EAAE,EAAEa,IAAI,CAACb,EAAG;IACZc,GAAG,EAAED,IAAI,CAACf,EAAG;IACbO,SAAS,EAAG,YAAWH,QAAQ,KAAKW,IAAI,CAACf,EAAE,GAAG,UAAU,GAAG,EAAG,EAAE;IAChEiB,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAACU,IAAI,CAACf,EAAE,CAAE;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEnCE,IAAI,CAACd,KACF,CAAC;EAAA;EAEP;EACAL,KAAA,CAAAU,aAAA;IACEU,GAAG,EAAED,IAAI,CAACf,EAAG;IACbO,SAAS,EAAG,YAAWH,QAAQ,KAAKW,IAAI,CAACf,EAAE,GAAG,UAAU,GAAG,EAAG,IAAGe,IAAI,CAACd,KAAK,KAAK,SAAS,GAAG,kBAAkB,GAAG,EAAG,EAAE;IACtHgB,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAACU,IAAI,CAACf,EAAE,CAAE;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEnCE,IAAI,CAACd,KACH,CAER,CACE,CAAC;AAEd;AAEA,eAAeE,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}