{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erbis\\\\Documents\\\\School\\\\447\\\\GoopProject\\\\goop_final_project\\\\src\\\\components\\\\universal\\\\NavigationBar.js\",\n  _s = $RefreshSig$();\n// src/components/NavigationBar/NavigationBar.jsx\nimport React, { useState } from 'react';\nimport './NavigationBar.css'; // Adjust the path according to your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menuItems = [{\n  id: 'genres',\n  label: 'Genres'\n}, {\n  id: 'artists',\n  label: 'Artists'\n}, {\n  id: 'albums',\n  label: 'Albums'\n}, {\n  id: 'mixes',\n  label: 'Mixes'\n}, {\n  id: 'labels',\n  label: 'Labels'\n}];\nfunction NavigationBar() {\n  _s();\n  const [selected, setSelected] = useState('genres');\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navigation-bar\",\n    children: menuItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `nav-item ${selected === item.id ? 'selected' : ''}`,\n      onClick: () => setSelected(item.id),\n      children: item.label\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) // Ensure this is correctly closing the <div> tag\n    )\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(NavigationBar, \"n/sAnQYxvm/gad35BIb2jiVfRUU=\");\n_c = NavigationBar;\nexport default NavigationBar;\nvar _c;\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","menuItems","id","label","NavigationBar","_s","selected","setSelected","className","children","map","item","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/erbis/Documents/School/447/GoopProject/goop_final_project/src/components/universal/NavigationBar.js"],"sourcesContent":["// src/components/NavigationBar/NavigationBar.jsx\r\nimport React, { useState } from 'react';\r\nimport './NavigationBar.css'; // Adjust the path according to your project structure\r\n\r\nconst menuItems = [\r\n  { id: 'genres', label: 'Genres' },\r\n  { id: 'artists', label: 'Artists' },\r\n  { id: 'albums', label: 'Albums' },\r\n  { id: 'mixes', label: 'Mixes' },\r\n  { id: 'labels', label: 'Labels' },\r\n];\r\n\r\nfunction NavigationBar() {\r\n  const [selected, setSelected] = useState('genres');\r\n\r\n  return (\r\n    <nav className=\"navigation-bar\">\r\n      {menuItems.map((item) => (\r\n        <div\r\n          key={item.id}\r\n          className={`nav-item ${selected === item.id ? 'selected' : ''}`}\r\n          onClick={() => setSelected(item.id)}\r\n        >\r\n          {item.label}\r\n        </div> // Ensure this is correctly closing the <div> tag\r\n      ))}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,SAAS,GAAG,CAChB;EAAEC,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EACjC;EAAED,EAAE,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EACnC;EAAED,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,EACjC;EAAED,EAAE,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAC/B;EAAED,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAS,CAAC,CAClC;AAED,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAElD,oBACEE,OAAA;IAAKQ,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BR,SAAS,CAACS,GAAG,CAAEC,IAAI,iBAClBX,OAAA;MAEEQ,SAAS,EAAG,YAAWF,QAAQ,KAAKK,IAAI,CAACT,EAAE,GAAG,UAAU,GAAG,EAAG,EAAE;MAChEU,OAAO,EAAEA,CAAA,KAAML,WAAW,CAACI,IAAI,CAACT,EAAE,CAAE;MAAAO,QAAA,EAEnCE,IAAI,CAACR;IAAK,GAJNQ,IAAI,CAACT,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKT,CAAC,CAAC;IACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACX,EAAA,CAhBQD,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAkBtB,eAAeA,aAAa;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}